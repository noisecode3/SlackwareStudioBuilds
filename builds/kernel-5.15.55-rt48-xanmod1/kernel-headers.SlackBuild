#!/bin/sh

# Copyright 2018  Patrick J. Volkerding, Sebeka, Minnesota, USA
# Copyright 2022, changes by Martin BÃ¥ngens, Sweden
# Copied from slackware64-15.0/source/k/ 2022-03-18
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# To use this script, point it to a Linux kernel source tree, and it will make
# the kernel-headers package using the .config to get all needed package
# version information:
#
# KERNEL_SOURCE=/usr/src/linux ./kernel-headers.SlackBuild

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=${PKGNAM:-kernel-headers}
BUILD=${BUILD:-1}
KERNEL_SOURCE=${KERNEL_SOURCE:-/usr/src/linux-${VERSION}}
if [ -z "${HEADERS_ARCH}" ]; then
    case "$(uname -m)" in
    i?86) HEADERS_ARCH=x86 ;;
    x86_64) HEADERS_ARCH=x86 ;;
    # Use uname -m for all other archs:
    *) HEADERS_ARCH=$(uname -m) ;;
  esac
fi
if [ ! -d "${KERNEL_SOURCE}" ]; then
  echo "Error: kernel source directory ${KERNEL_SOURCE} does not exist."
  exit 1
elif [ ! -r ${KERNEL_SOURCE}/.config ]; then
  echo "Error: a .config was not found in ${KERNEL_SOURCE}."
  exit 1
fi
# Get the kernel version from the kernel Makefile:
VERSION=$(grep "^VERSION = " ${KERNEL_SOURCE}/Makefile | rev | cut -f 1 -d ' ' | rev).$(grep "^PATCHLEVEL = " ${KERNEL_SOURCE}/Makefile | rev | cut -f 1 -d ' ' | rev).$(grep "^SUBLEVEL = " ${KERNEL_SOURCE}/Makefile | rev | cut -f 1 -d ' ' | rev)$(grep "^EXTRAVERSION = " ${KERNEL_SOURCE}/Makefile | rev | cut -f 1 -d ' ' | rev)$(cat ${KERNEL_SOURCE}/localversion-rt)$(cat ${KERNEL_SOURCE}/localversion-xanmod)
# Set LOCALVERSION to the value found inside the .config:
LOCALVERSION="$(cat ${KERNEL_SOURCE}/.config 2> /dev/null | grep CONFIG_LOCALVERSION= | cut -f 2 -d = | tr -d \")"

TMP=${TMP:-/tmp}
PKG=$TMP/package-$PKGNAM

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "kernel-headers-$(echo ${VERSION} | tr - _)$(echo ${LOCALVERSION} | tr - _)-${HEADERS_ARCH}-$BUILD.txz"
  exit 0
fi

rm -rf $PKG
mkdir -p $TMP $PKG
mkdir -p $PKG/usr

# Generate the kernel headers and clean them up:
( cd ${KERNEL_SOURCE}
  echo "Generating headers from the Linux kernel source tree in ${KERNEL_SOURCE}:"
  make headers_install ARCH=${HEADERS_ARCH} INSTALL_HDR_PATH=$PKG/usr
  cd $PKG/usr/include
  # You won't want these files. The ones in libdrm work better.
  rm -rf drm
  # This next part seems pretty much cosmetic, but since we've been doing this
  # for a long time (and others also do), we'll stick with it:
  mv asm asm-${HEADERS_ARCH}
  ln -sf asm-${HEADERS_ARCH} asm
  # Remove unneeded dotfiles:
  find . -name ".??*" -exec rm -f {} \+
)
  
mkdir -p $PKG/install
cat $CWD/slack-desc/slack-desc.kernel-headers > $PKG/install/slack-desc

# Make the package:
cd $PKG
/sbin/makepkg -l y -c n $TMP/kernel-headers-$(echo ${VERSION} | tr - _)$(echo ${LOCALVERSION} | tr - _)-${HEADERS_ARCH}-$BUILD.txz

