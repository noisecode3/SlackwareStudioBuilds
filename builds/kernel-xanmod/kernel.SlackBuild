#!/bin/bash

# Slackware build script for kernel-generic-xanmod

# Copyright 2023 Martin BÃ¥ngens Sweden
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=kernel
VERSION=${VERSION:-6.1}
KERNEL=-xanmod1
KTAG=
NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}
REMOVE_GIT=${REMOVE_GIT:-YES}
BUILD=${BUILD:-1}
TAG=${TAG:-_SSb}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM$KERNEL-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

if [ $ARCH != "x86_64" ]; then
  echo "There is only config file for x86_64 FIXME"
  exit 1
fi

TMP=${TMP:-/tmp/SSb}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

set -e

rm -rf $PKG
mkdir -p $TMP $PKG/usr/src $PKG/boot $PKG/lib/modules $OUTPUT

cd $PKG/usr/src

git clone --depth 1 -b $VERSION https://github.com/xanmod/linux
cd linux

if [ "$REMOVE_GIT" = "YES" ]; then
  rm -fr .git*
fi

# If we find .patch.xz or .patch files apply then and save them in the source dir
if [ -d "$PATCH_DIR" ]; then
  if [ `ls -1 $PATCH_DIR/*.patch.xz 2>/dev/null | wc -l` != 0 ]; then
    for i in $PATCH_DIR/*.patch.xz; do
      xzcat $i | patch -p1 --verbose --backup --suffix=.orig || exit 2
      cp $i $PKG/usr/src/linux-$VERSION-$KERNEL
    done
  fi
  if [ `ls -1 $PATCH_DIR/*.patch 2>/dev/null | wc -l` != 0 ]; then
    for i in $PATCH_DIR/*.patch; do
      cat $i | patch -p1 --verbose --backup --suffix=.orig || exit 3
      cp $i $PKG/usr/src/linux-$VERSION-$KERNEL
    done
  fi
fi

# Sync version to git and applied patches
VERSION=$(grep "^VERSION = " Makefile | rev | cut -f 1 -d ' ' | rev)
VERSION=$VERSION.$(grep "^PATCHLEVEL = " Makefile | rev | cut -f 1 -d ' ' | rev)
VERSION=$VERSION.$(grep "^SUBLEVEL = " Makefile | rev | cut -f 1 -d ' ' | rev)
VERSION=$VERSION$(grep "^EXTRAVERSION = " Makefile | rev | cut -f 1 -d ' ' | rev)

if [ -f "localversion-rt" ]; then
  KTAG=$(cat localversion-rt 2> /dev/null)
elif [ -f "localversion-tt" ]; then
  KTAG=$(cat localversion-tt 2> /dev/null)
fi

if [ -f "localversion-xanmod" ]; then
  KERNEL=$(cat localversion-xanmod 2> /dev/null)
elif [ -f "localversion" ]; then
  KERNEL=$(cat localversion 2> /dev/null)
fi

cd ..
mv linux linux-$VERSION$KTAG$KERNEL
cd linux-$VERSION$KTAG$KERNEL

# If we specify a config file then do some check to see that is looks like a config file
if [ -f "$CONFIG" ]; then
  if [ "$(sed '3q;d' $CONFIG | awk '{print $5;}')" != "Configuration" ]; then
    echo "Specified CONFIG file don't look right"
    exit 1
  else
    cp -v $CONFIG .config || exit 4
  fi
else
  cp -v $CWD/config .config || exit 5
fi

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \+

make clean
make prepare
make oldconfig
make menuconfig
make $NUMJOBS bzImage || make bzImage || exit 6
make $NUMJOBS modules || exit 7
make INSTALL_MOD_PATH=$PKG modules_install || exit 8

cd $PKG/lib/modules/$VERSION$KTAG$KERNEL
rm build source
ln -sv /usr/src/linux-$VERSION$KTAG$KERNEL build || exit 9
ln -sv /usr/src/linux-$VERSION$KTAG$KERNEL source || exit 10

cd $PKG/usr/src/linux-$VERSION$KTAG$KERNEL
depmod -b $PKG -a $VERSION$KTAG$KERNEL

cp -v System.map $PKG/boot/System.map$KERNEL${KTAG:0:3}-$VERSION$KTAG || exit 11
cp -v .config $PKG/boot/config$KERNEL${KTAG:0:3}-$VERSION$KTAG || exit 12
cp -v arch/x86/boot/bzImage $PKG/boot/vmlinuz$KERNEL${KTAG:0:3}-$VERSION$KTAG || exit 13

ln -srv $PKG/boot/System.map$KERNEL${KTAG:0:3}-$VERSION$KTAG $PKG/boot/System.map$KERNEL${KTAG:0:3}
ln -srv $PKG/boot/config$KERNEL${KTAG:0:3}-$VERSION$KTAG $PKG/boot/config$KERNEL${KTAG:0:3}
ln -srv $PKG/boot/vmlinuz$KERNEL${KTAG:0:3}-$VERSION$KTAG $PKG/boot/vmlinuz$KERNEL${KTAG:0:3}

make clean
make prepare
find . -name "*Image" -exec rm "{}" \+
rm -f .config.old .version
find . -name "*.cmd" -exec rm -f "{}" \+
rm .*.d

mkdir -p $PKG/usr/doc/$PRGNAM$KERNEL${KTAG:0:3}-$VERSION$KTAG
cat $CWD/$PRGNAM.SlackBuild > \
$PKG/usr/doc/$PRGNAM$KERNEL${KTAG:0:3}-$VERSION$KTAG/$PRGNAM$KERNEL${KTAG:0:3}.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc$(echo ${KTAG:0:3} | sed s/-/./) > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM$KERNEL${KTAG:0:3}-$VERSION$KTAG-$ARCH-$BUILD$TAG.$PKGTYPE
